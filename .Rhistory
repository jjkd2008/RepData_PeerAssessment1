cube <-function(x,n) { x^3}
cube(3)
x<- 1:10
if(x>5){ x<-0}
f <- function(x) {
g<- function(y){
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
x<-5
y<- if(x<3){ NA } else {10}
y
?str
?ebug
?debug
debug(lm)
lm(y-x)
lm(y~x)
undebug(lm)
options(error=recover)
read.csv("nosuchfile")
?error
??error
?recover
options(error = NULL)
read.csv("nosuchfile")
library(datasets)
data(iris)
?iris
iris
x<-split(iris, iris$species)
x<-split(iris, iris$Species)
lapply(x,function(x) colMeans(x[,Sepal.Length]))
lapply(x,function(x) colMeans(x[,c("Sepal.Length")]))
x
y<-x$virginica
y
colMeans(y)
colMeans(y[,2:4])
colMeans(y[,1:4])
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
sapply(split(mtcars$mpg,mtcars$cyl),mean)
mean(mtcars$mpg,mtcars$cyl)
p<-sapply(split(mtcars$hp,mtcars$cyl),mean)
p
dif<-abs(p[3]-p[1])
dif
debug(ls)
ls
ls()
exit
quit
stop
?
help
swirl()
library(swirl)
swirl()
install_from_swirl("R Programming Alt")
swirl()
x<-rnorm(100)
y<-x+2*rnorm(100)
plot(x,y,type="l")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
library(datasets)
data(airquality)
library(ggplot)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
astr(airquality)
str(airquality)
qplot(Wind,Ozone,data=airquality,facets=.~Month)
g<-ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
par(mfrow=c(2,1))
title<-c("Mean number of steps per time interval \n measured across days")
yl<-c("Mean # of steps")
xl<-c("Time Interval (HHMM)")
plot(x_int,tI_mday,type="l",xlab="",ylab="",main=title)
plot(x_int,tI_mend,type="l",xlab=xl,ylab="")
mtext(yl,side=2)
par(mfrow=c(2,1))
title<-c("Mean number of steps per time interval \n measured across days")
yl<-c("Mean # of steps")
xl<-c("Time Interval (HHMM)")
plot(x_int,tI_mday,type="l",xlab="",ylab="",main=title)
plot(x_int,tI_mend,type="l",xlab=xl,ylab="")
dat <-read.csv(file='activity.csv')
#set up columns for each date with values of steps for each interval
t<-cast(dat,interval~date,value="steps")
# set up columns for each interval with values for steps for each date
t2<-cast(dat,date~interval,value="steps")
## What is the mean total # of steps taken per day (ignoring missing data)?
## create histogram
## calculate total steps taken per day
t_sum<-colSums(t,na.rm=FALSE)
hist(t_sum)
## calc & report mean/median total # steps taken per day
t_mean <- mean(t_sum,na.rm=TRUE)
t_median <-median(t_sum,na.rm=TRUE)
## report in the text using variable references
## What is the average daily activity pattern?
## time series plot of 5-min interval v. average # steps taken (averaged across all days)
## use the t2 cast data set
## find colmeans
t2_mean <-colMeans(t2,na.rm=TRUE)
## set value for x axis and the plot characteristics
x_int <-as.integer(names(t2)[-1])
title<-c("Mean number of steps per time interval \n measured across days")
yl<-c("Mean # of steps")
xl<-c("Time Interval (HHMM)")
plot(x_int,t2_mean,type="l",xlab=xl,ylab=yl,main=title)
## Which 5-min interval, on average across all days, contains max # of steps?
max_steps_interval<-names(which(t2_mean == max(t2_mean)))
## report in text
## Impute missing values
## Calc & report total # of missing values in dataset (ie total rows with NAs)
rows_na <- apply(t2, 1, function(x){any(is.na(x))})
num_rows_na <- sum(rows_na) ## report this in text
## impute the missing data (describe the strategy)
## use the integer mean value of the steps for each time interval to replace NAs
## create new dataset with data imputed
tImpute<-t2
tImpute[rows_na,2:289]<-as.integer(t2_mean)
## make hist of total # steps taken each day
tI_sum<-rowSums(tImpute)
hist(tI_sum)
## calc & report mean/median total number of steps taken per day
## Do these values differ from the estimates from the first part of the assignment?
## What is the impact of the imputation?
tI_mean <- mean(tI_sum)
tI_median <-median(tI_sum)
setwd("~/Documents/Coursera/ReproducibleResearch/RepData_PeerAssessment1")
dat <-read.csv(file='activity.csv')
#set up columns for each date with values of steps for each interval
t<-cast(dat,interval~date,value="steps")
# set up columns for each interval with values for steps for each date
t2<-cast(dat,date~interval,value="steps")
## What is the mean total # of steps taken per day (ignoring missing data)?
## create histogram
## calculate total steps taken per day
t_sum<-colSums(t,na.rm=FALSE)
hist(t_sum)
## calc & report mean/median total # steps taken per day
t_mean <- mean(t_sum,na.rm=TRUE)
t_median <-median(t_sum,na.rm=TRUE)
## report in the text using variable references
## What is the average daily activity pattern?
## time series plot of 5-min interval v. average # steps taken (averaged across all days)
## use the t2 cast data set
## find colmeans
t2_mean <-colMeans(t2,na.rm=TRUE)
## set value for x axis and the plot characteristics
x_int <-as.integer(names(t2)[-1])
title<-c("Mean number of steps per time interval \n measured across days")
yl<-c("Mean # of steps")
xl<-c("Time Interval (HHMM)")
plot(x_int,t2_mean,type="l",xlab=xl,ylab=yl,main=title)
## Which 5-min interval, on average across all days, contains max # of steps?
max_steps_interval<-names(which(t2_mean == max(t2_mean)))
## report in text
require(reshape)
require(plyr)
dat <-read.csv(file='activity.csv')
t<-cast(dat,interval~date,value="steps")
t2<-cast(dat,date~interval,value="steps")
t_sum<-colSums(t,na.rm=FALSE)
hist(t_sum)
## calc & report mean/median total # steps taken per day
t_mean <- mean(t_sum,na.rm=TRUE)
t_median <-median(t_sum,na.rm=TRUE)
plot
plot()
hist(t_sum)
